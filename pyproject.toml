[build-system]
requires = ['setuptools', 'setuptools_scm[toml]']
build-backend = 'setuptools.build_meta'

[tool.setuptools_scm]

[project]
name = 'jewcal'
description = 'Convert Gregorian to Jewish dates and get Shabbos / Yom Tov details for Diaspora and Israel.'
keywords = [
  'jewish calendar',
]
license = {file = 'LICENSE'}
dynamic = ['version']
authors = [{ name='essel-dev', email='info@essel.dev' }]
readme = 'README.rst'
requires-python = '>=3.10'
dependencies = []

[project.urls]
'GitHub' = 'https://github.com/essel-dev/jewcal'
'Documentation' = 'https://jewcal.readthedocs.io/'
'Changelog' = 'https://github.com/essel-dev/jewcal/releases'
'Bug Tracker' = 'https://github.com/essel-dev/jewcal/issues'

[project.optional-dependencies]
dev = [
	'pre-commit',
	'tox',
	'sphinx',
	'sphinx-rtd-theme',
]

[tool.tox]
legacy_tox_ini = """
	[tox]
	envlist =
		py{310,311}
		ruff-lint
        ruff-format
		pylint
		mypy
		darglint
		pre-commit
		docs

	[testenv]
	package = wheel
	wheel_build_env = .pkg
	deps =
		coverage
		py310: coverage[toml]
	commands =
		coverage run -m unittest discover
		py311: coverage report -m

	[testenv:ruff-lint]
	deps = ruff
	commands = ruff check --fix

	[testenv:ruff-format]
	deps = ruff
	commands = ruff format

	[testenv:pylint]
	deps = pylint
	commands = pylint src tests docs

	[testenv:mypy]
	deps = mypy
	commands = mypy

	[testenv:darglint]
	deps = darglint
	commands = darglint -s google src tests docs

	[testenv:pre-commit]
	deps = pre-commit
	commands = pre-commit run --all-files

	[testenv:docs]
	changedir=docs
	deps =
		sphinx
		sphinx-rtd-theme
	allowlist_externals = make
	commands = make clean html

	[gh-actions]
	python =
		3.10: py310
		3.11: py311, ruff-lint, ruff-format, pylint, mypy, darglint
"""

[tool.coverage.run]
source = [
	'src'
]
omit = [
	'__main__.py',
]

[tool.ruff.lint]
select = [
	'I', # isort
	'PL', # pylint

	'F', # pyflakes
	'B', # flake8-bugbear
	'S', # flake8-bandit
	'SIM', # flake8-simplify
	"PIE", # flake8-pie
	"RET", # flake8-return
	"RSE", # flake8-raise
	'TD', # flake8-todo

	'E', # pycodestyle
	'D', # pydocstyle

	'UP', # pyupgrade
	"TRY", # tryceratops
	'PERF', # perflint
	'RUF', # ruff
]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.ruff.format]
quote-style = 'single'
docstring-code-format = true


[tool.mypy]
files = 'src, tests, docs'
strict = true
show_error_codes = true
enable_error_code = ['ignore-without-code', 'redundant-expr', 'truthy-bool']
warn_unreachable = true
namespace_packages = true
explicit_package_bases = true
